{
    "$schema": "../config/settings.schema.json",
    "+lsp": {
        "nimlangserver": null,

        "clangd.command": ["clangd", "--offset-encoding=utf-8", "--background-index", "--limit-results=100", "--limit-references=2000", "--clang-tidy"],

        "+rust-analyzer": {
            "rust-analyzer": {
                "linkedProjects": ["temp/rust_test/Cargo.toml"]
            }
        }
    },

    "+snippets": {
        "+nim": {
            "Print to console": {
                "scope": "nim",
                "prefix": "log",
                "body": [
                    "log lvl${1:Info}, &\"[${TM_FILENAME/(.*)\\..*$/${1:/capitalize}/}] $2\""
                ]
            },
            "try": {
                "scope": "nim",
                "prefix": "try",
                "body": [
                    "try:",
                    "  ${1:discard}",
                    "except ${2:CatchableError}:",
                    "  ${0:discard}"
                ]
            },
            "tryef": {
                "scope": "nim",
                "prefix": "tryef",
                "body": [
                    "try:",
                    "  ${1:discard}",
                    "except ${2:CatchableError}:",
                    "  ${3:discard}",
                    "finally:",
                    "  ${0:discard}"
                ]
            },
            "tryf": {
                "scope": "nim",
                "prefix": "tryf",
                "body": [
                    "try:",
                    "  ${1:discard}",
                    "finally:",
                    "  ${0:discard}"
                ]
            },
            "Pragma": {
                "scope": "nim",
                "prefix": "pra",
                "body": [
                    "{{.$0.}"
                ]
            },
            "Procedure": {
                "scope": "nim",
                "prefix": "proc",
                "body": [
                    "proc ${1:name}($2)$3 =",
                    "  ${0:discard}"
                ]
            },
            "Async procedure": {
                "scope": "nim",
                "prefix": "proca",
                "body": [
                    "proc ${1:name}($2)$3 {.async.} =",
                    "  ${0:discard}"
                ]
            },
            "For loop": {
                "scope": "nim",
                "prefix": "for",
                "body": [
                    "for ${1:it} in ${2:items}:",
                    "  ${0:discard}"
                ]
            },
            "While loop": {
                "scope": "nim",
                "prefix": "whl",
                "body": [
                    "while ${1:true}:",
                    "  ${0:discard}"
                ]
            },
            "If": {
                "scope": "nim",
                "prefix": "if",
                "body": [
                    "if ${1:true}:",
                    "  ${0:discard}"
                ]
            },
            "Elif": {
                "scope": "nim",
                "prefix": "elif",
                "body": [
                    "elif ${1:true}:",
                    "  ${0:discard}"
                ]
            },
            "If+Else": {
                "scope": "nim",
                "prefix": "ife",
                "body": [
                    "if ${1:true}:",
                    "  ${2:discard}",
                    "else:",
                    "  ${0:discard}"
                ]
            }
        }
    },

    "+debugger": {
        "+type": {
            "lldb-dap": {
                "connection": "stdio",
                "path": "/bin/lldb-dap-18",
                "args": []
            },
            "lldb-dap-tcp-launch": {
                "connection": "tcp",
                "path": "D:/llvm/bin/lldb-dap.exe"
            },
            "lldb": {
                "connection": "tcp",
                "path": "C:/llvm/build_release/RelWithDebInfo/bin/lldb-dap.exe"
            },
            "lldb-dap-tcp": {
                "connection": "tcp",
                "port": 5678
            },
            "lldb-dap-debug-tcp-launch": {
                "connection": "tcp",
                "path": "C:/llvm/build_lldb/Debug/bin/lldb-dap.exe"
            },
            "lldb-debug": {
                "connection": "tcp",
                "path": "C:/llvm/build_lldb/Debug/bin/lldb-dap.exe"
            },
            "lldb-port": {
                "connection": "tcp",
                "port": 5678
            },
            "lldb-dap2": {}
        },
        "+configuration": {
            "nev": {
                "type": "lldb-dap",
                "request": "launch",
                "program": "nevd",
                "args": ["-s:linux.nev-session"]
            }
        }
    },

    "x+startup-commands": [
        ".lsp-log-server-debug true",
        ".lsp-log-verbose true"
    ],

    "+wasm-plugin-post-load-commands": [
        "load-vscode-debugger-config \".vscode/launch.json\""
    ]
}